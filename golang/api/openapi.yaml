openapi: 3.0.0
info:
  description: Queensaver API to send in sensor data and retrieve it. It's also used
    for user management.
  title: Queensaver API
  version: 0.0.1
servers:
- description: Queensaver API Server
  url: https://api.queensaver.com
security:
- cookieAuth: []
paths:
  /v1/user:
    post:
      description: This call creates a user in the queensaver system.
      operationId: userPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              examples:
                missingData:
                  value: Data is missing.
              schema:
                $ref: '#/components/schemas/errorMessage'
          description: The provided parameters are incorrect
      security: []
      summary: Create a user
  /v1/login:
    post:
      description: This call is meant for interactive web applications. Be aware that
        the server returns a cookie with a 24 hour lifetime.
      operationId: loginPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/login'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/login-post-response'
          description: Returns a cookie to the browser with the key called 'token'
          headers:
            SetCookie:
              explode: false
              schema:
                description: sets the cookie
                example: token=abcde12345; Path=/; HttpOnly
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorMessage'
          description: The provided parameters are incorrect
      security: []
      summary: Authenticate a user against the system.
  /v1/configs/bbox:
    delete:
      description: This deletes a bbox.
      operationId: configsBboxDelete
      parameters:
      - description: Either the cookie or this Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: false
        in: header
        name: Q-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Either this cookie or the Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: true
        in: cookie
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The UserID is set internally and can not set or be overridden
          with the API request. Please ignore.
        example: 1234
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The UUID of the bbox.
        example: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
        explode: true
        in: query
        name: uuid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Returns 200 if the delete was successful
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Delete a bbox
    get:
      description: This returns all bboxes of a user
      operationId: configsBboxGet
      parameters:
      - description: Either the cookie or this Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: false
        in: header
        name: Q-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Either this cookie or the Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: true
        in: cookie
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: "The UUID of the bbox. If not set, the request will return all\
          \ bboxes."
        example: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          type: string
        style: form
      - description: The UserID is set internally and can not set or be overridden
          with the API request. Please ignore.
        example: 1234
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get-bbox-response'
          description: bboxes
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Get Config metadata of bboxes
    post:
      description: This creates a new bbox. A bbox is a physical hardware component
        that needs to be associated with a hive.
      operationId: configsBboxPost
      parameters:
      - description: Either the cookie or this Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: false
        in: header
        name: Q-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Either this cookie or the Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: true
        in: cookie
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The UserID is set internally and can not set or be overridden
          with the API request. Please ignore.
        example: 1234
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bbox'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post-bbox-response'
          description: Returns the created bbox and the http error code
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Create bbox
    put:
      description: This call updates bbox metadata
      operationId: configsBboxPut
      parameters:
      - description: Either the cookie or this Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: false
        in: header
        name: Q-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Either this cookie or the Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: true
        in: cookie
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The UUID of the bbox. Required. You can only update one bbox
          at a time.
        example: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
        explode: true
        in: query
        name: uuid
        required: true
        schema:
          type: string
        style: form
      - description: The UserID is set internally and can not set or be overridden
          with the API request. Please ignore.
        example: 1234
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bbox'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/put-bbox-response'
          description: Returns the updated bbox
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Update bbox metadata
  /v1/authenticateRegistrationId:
    post:
      description: This can not be called from the API but is an internal call. Please
        ignore if you consume this API publicly. An authentication call can be either
        a username or password but also a registrationId. In this call we implement
        the registrationId.
      operationId: authenticateRegistrationIdPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registrationId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authenticate-post-response'
          description: Authenticated
        "400":
          description: Client error
        "500":
          description: Internal error
      security: []
      summary: authenticate against the internal authentication service with a registrationId.
  /v1/configs/bbox/register:
    post:
      description: "This registers a new bbox. A bbox is a physical hardware component\
        \ that needs to be associated with a hive. The bbox sends a registrationId\
        \ that a user needs to know and put in the system before the registration.\
        \ The bbox proto is used as a convenience, the only field that is accepted\
        \ is the bboxId and the registrationId, the hardwareType and that hardwareRevision."
      operationId: configsBboxRegisterPost
      parameters:
      - description: The UserID is set internally and can not set or be overridden
          with the API request. Please ignore.
        example: 1234
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bbox'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bbox-config-response'
          description: Generic Response object that just returns an HTTP status code
        "400":
          description: Client error
        "500":
          description: Internal error
      summary: register bbox
  /v1/configs/bbox/associate:
    post:
      description: "This connects a bbox with a hive so all telemetry data will be\
        \ associate with the hive. If the hiveUuid is empty, we disassociate that\
        \ bhive (it's no longer connected to any hives)"
      operationId: configsBboxAssociatePost
      parameters:
      - description: The UserID is set internally and can not set or be overridden
          with the API request. Please ignore.
        example: 1234
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The Mac Address of the bBox.
        example: 829898a53801
        explode: true
        in: query
        name: bboxId
        required: true
        schema:
          type: string
        style: form
      - description: Unique Identifier for this hive
        example: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
        explode: true
        in: query
        name: hiveUuid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: OK if the association / disassociation has been made
        "400":
          description: Client error
        "500":
          description: Internal error
      summary: associate bbox and its sensors to a logical hive
  /v1/stands:
    delete:
      description: "This deletes a stand. If a stand is deleted, it will only get\
        \ its deleted field set to true. It will not actually be deleted, because\
        \ we need to always be able to go back in time."
      operationId: standsDelete
      parameters:
      - description: Either the cookie or this Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: false
        in: header
        name: Q-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Either this cookie or the Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: true
        in: cookie
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The UserID is set internally and can not set or be overridden
          with the API request. Please ignore.
        example: 1234
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The UUID of the stand.
        example: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
        explode: true
        in: query
        name: uuid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Returns 200 if the delete was successful
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Delete a stand
    get:
      description: "This returns all hive stand for the currently logged in user.\
        \ Important to understand is that a user can go back into the past at any\
        \ point in time (how did my stand look like a month or a year ago), so the\
        \ cloud stores multiple versions of stand metadata. Any PUT request will create\
        \ a new version."
      operationId: standsGet
      parameters:
      - description: Either the cookie or this Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: false
        in: header
        name: Q-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Either this cookie or the Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: true
        in: cookie
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: "The UUID of the stand. If not set, the request will return all\
          \ stands."
        example: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          type: string
        style: form
      - description: "The Unix Time (epoch) that defines the end time of the query.\
          \ The beginning is defined by the secondsInThePast parameter. If unset,\
          \ the epoch will be set to NOW()"
        example: 1639170002
        explode: true
        in: query
        name: epoch
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: "How many seconds we go to the past to return data versions.\
          \ If set to zero, we will return exactly one version. If set to non-zero,\
          \ we will return all results from the past as well, up to 100 values."
        example: 7200
        explode: true
        in: query
        name: secondsInThePast
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: The UserID is set internally and can not set or be overridden
          with the API request. Please ignore.
        example: 1234
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get-stands-response'
          description: Stands
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Get Stand metadata
    post:
      description: This creates a new stand. A stand is a logical representation of
        a location of bee hives.
      operationId: standsPost
      parameters:
      - description: Either the cookie or this Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: false
        in: header
        name: Q-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Either this cookie or the Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: true
        in: cookie
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The UserID is set internally and can not set or be overridden
          with the API request. Please ignore.
        example: 1234
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stand'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post-stands-response'
          description: Returns the created stand and the http error code
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Create stand metadata
    put:
      description: "This updates stand metadata. Note that internaly we will actally\
        \ create a new version of the stand (not the hives). When you issue this call\
        \ you will have to provide the UUID, otherwise we don't know which stand to\
        \ update. Also any hives attached to the stand will be ignored, you can only\
        \ update a single stand at any time."
      operationId: standsPut
      parameters:
      - description: Either the cookie or this Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: false
        in: header
        name: Q-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Either this cookie or the Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: true
        in: cookie
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The UserID is set internally and can not set or be overridden
          with the API request. Please ignore.
        example: 1234
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stand'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/put-stand-response'
          description: Returns the updated stand
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Update stand metadata
  /v1/hives:
    delete:
      description: This deletes a hive.
      operationId: hivesDelete
      parameters:
      - description: Either the cookie or this Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: false
        in: header
        name: Q-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Either this cookie or the Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: true
        in: cookie
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The UserID is set internally and can not set or be overridden
          with the API request. Please ignore.
        example: 1234
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The UUID of the hive.
        example: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
        explode: true
        in: query
        name: uuid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Returns 200 if the delete was successful
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Delete a Hive
    get:
      description: "This returns all hive metadata for the currently logged in user.\
        \ Important to understand is that a user can go back into the past at any\
        \ point in time (how did my bee hive look like a month or a year ago), so\
        \ the cloud stores multiple versions of hive metadata. Any PUT request will\
        \ create a new version. W"
      operationId: hivesGet
      parameters:
      - description: "The UUID of the hive. If not set, the request will return all\
          \ hives."
        example: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          type: string
        style: form
      - description: "The Unix Time (epoch) that defines the end time of the query.\
          \ The beginning is defined by the secondsInThePast parameter. If unset,\
          \ the epoch will be set to NOW()"
        example: 1639170002
        explode: true
        in: query
        name: epoch
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: "How many seconds we go to the past to return data versions.\
          \ If set to zero, we will return exactly one version."
        example: 7200
        explode: true
        in: query
        name: secondsInThePast
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: The UserID is set internally and can not set or be overridden
          with the API request. Please ignore.
        example: 1234
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get-hives-response'
          description: Hives
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Get Hive metadata
    post:
      description: This creates a new hive. A hive is a logical representation of
        a bee hive that can be connected to hardware.
      operationId: hivesPost
      parameters:
      - description: Either the cookie or this Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: false
        in: header
        name: Q-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Either this cookie or the Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: true
        in: cookie
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The UserID is set internally and can not set or be overridden
          with the API request. Please ignore.
        example: 1234
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/hive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post-hives-response'
          description: Returns the created hive
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Create Hive metadata
    put:
      description: This updates hive metadata. Note that internaly we will actally
        create a new version of the data.
      operationId: hivesPut
      parameters:
      - description: Either the cookie or this Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: false
        in: header
        name: Q-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Either this cookie or the Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: true
        in: cookie
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The UserID is set internally and can not set or be overridden
          with the API request. Please ignore.
        example: 1234
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/hive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/put-hive-response'
          description: Returns the updated hive
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Update Hive metadata
  /v1/bboxes:
    get:
      description: "This returns QBox metadata for the logged in user. The request\
        \ needs to present a valid session cookie. There are no query parameters needed\
        \ here, the request will return all known bboxes."
      operationId: bboxesGet
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/bbox'
                type: array
          description: QBox metadata
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Get QBox metadata
  /v1/temperature:
    get:
      description: "This returns temperate values for a certain, defineable date range.\
        \ The request needs to send a cookie along with the request. The cookie is\
        \ stored under the key called \"token\". Note that this returns the temperature\
        \ data for a QBox Client (independent of the beeHive), the API call for an\
        \ actual beeHive is different."
      operationId: temperatureGet
      parameters:
      - description: Either the cookie or this Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: false
        in: header
        name: Q-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Either this cookie or the Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: true
        in: cookie
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The Mac Address of the QBox client. You can get all QBox IDs
          and clients with the /config API call.
        example: 829898a53801
        explode: true
        in: query
        name: bhiveId
        required: true
        schema:
          type: string
        style: form
      - description: The Unix Time (epoch) that defines the end time of the scale
          measurements. The beginning is defined by the secondsInThePast parameter.
        example: 1639170002
        explode: true
        in: query
        name: epoch
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: How many seconds we go to the past to get the data measurements.
        example: 7200
        explode: true
        in: query
        name: secondsInThePast
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: The User ID. This is used internally and will be overwritten
          if you send it to the api server. Ignore.
        example: 123
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get-temperature-response'
          description: Successfully returned a list of scale measurements
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Get Temperature values
    post:
      description: This stores a new temperature measurement in the database. Must
        be authorized wit ha cookie or a token.
      operationId: temperaturePost
      parameters:
      - description: The User ID. This is used internally and will be overwritten
          if you send it to the api server. Ignore.
        example: 123
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/temperature'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic-post-response'
          description: Generic Response object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic-post-response'
          description: Generic Response object
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic-post-response'
          description: Generic Response object
      security:
      - cookieAuth: []
      summary: Save a new temperature measurement
  /v2/scale:
    get:
      description: "This returns scale values for a certain, defineable date range.\
        \ The request needs to send a token in the header or a cookie. Note that this\
        \ returns the scale data for a scale (independent of the beeHive), the API\
        \ call for an actual beeHive is different."
      operationId: scaleGetV2
      parameters:
      - description: "Either the cookie, registrationId or this Q-Token must be set\
          \ to be authorized for the API call."
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: false
        in: header
        name: Q-Token
        required: false
        schema:
          type: string
        style: simple
      - description: "Either this cookie, registrationId or the Q-Token must be set\
          \ to be authorized for the API call."
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: true
        in: cookie
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The Mac Address of the scale.
        example: 829898a53801
        explode: true
        in: query
        name: macAddress
        required: true
        schema:
          type: string
        style: form
      - description: The Unix Time (epoch) that defines the end time of the scale
          measurements. The beginning is defined by the secondsInThePast parameter.
        example: 1639170002
        explode: true
        in: query
        name: epoch
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: How many seconds we go to the past to get the data measurements.
        example: 7200
        explode: true
        in: query
        name: secondsInThePast
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: The User ID. This is used internally and will be overwritten
          if you send it to the api server. Ignore.
        example: 123
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleV2Response'
          description: Successfully returned a list of scale measurements
        "400":
          description: Client error
        "500":
          description: Internal error
      summary: Get Scale values
    post:
      description: Sends a weight from a scale to the queensaver system. The request
        needs to send the registrationId along with the request.
      operationId: scalePostV2
      parameters:
      - description: "The unique registration Id for that scale. The user needs to\
          \ register it first in the cloud, otherwise we will not accept the data."
        example: 8B0FE5CFC0964B3E874827906B4A9449
        explode: false
        in: header
        name: registrationId
        required: true
        schema:
          type: string
        style: simple
      - description: The User ID. This is used internally and will be overwritten
          if you send it to the api server. Ignore.
        example: 123
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scaleV2'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic-post-response'
          description: Generic Response object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic-post-response'
          description: Generic Response object
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic-post-response'
          description: Generic Response object
      summary: Post Scale values
  /v1/scale:
    get:
      deprecated: true
      description: "This returns scale values for a certain, defineable date range.\
        \ The request needs to send a cookie along with the request. The cookie is\
        \ stored under the key called \"token\". Note that this returns the scale\
        \ data for a QBox Client (independent of the beeHive), the API call for an\
        \ actual beeHive is different."
      operationId: scaleGet
      parameters:
      - description: "Either the cookie, registrationId or this Q-Token must be set\
          \ to be authorized for the API call."
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: false
        in: header
        name: Q-Token
        required: false
        schema:
          type: string
        style: simple
      - description: "Either this cookie, registrationId or the Q-Token must be set\
          \ to be authorized for the API call."
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: true
        in: cookie
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The Mac Address of the QBox client. You can get all QBox IDs
          and clients with the /config API call.
        example: 829898a53801
        explode: true
        in: query
        name: bhiveId
        required: true
        schema:
          type: string
        style: form
      - description: The Unix Time (epoch) that defines the end time of the scale
          measurements. The beginning is defined by the secondsInThePast parameter.
        example: 1639170002
        explode: true
        in: query
        name: epoch
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: How many seconds we go to the past to get the data measurements.
        example: 7200
        explode: true
        in: query
        name: secondsInThePast
        required: true
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/weight'
                type: array
          description: Successfully returned a list of scale measurements
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Get Scale values
    post:
      description: "Sends a weight from a hive to the queensaver system. The request\
        \ needs to send a cookie along with the request. The cookie is stored under\
        \ the key called \"token\". Note that this returns the scale data for a QBox\
        \ Client (independent of the beeHive), the API call for an actual beeHive\
        \ is different."
      operationId: scalePost
      parameters:
      - description: "Either the cookie, the registrationId or this Q-Token must be\
          \ set to be authorized for the API call."
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: false
        in: header
        name: registrationId
        required: false
        schema:
          type: string
        style: simple
      - description: "Either the cookie, the registrationId or this Q-Token must be\
          \ set to be authorized for the API call."
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: false
        in: header
        name: Q-Token
        required: false
        schema:
          type: string
        style: simple
      - description: Either this cookie or the Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: true
        in: cookie
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The User ID. This is used internally and will be overwritten
          if you send it to the api server. Ignore.
        example: 123
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/weight'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic-post-response'
          description: Generic Response object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic-post-response'
          description: Generic Response object
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic-post-response'
          description: Generic Response object
      security:
      - cookieAuth: []
      summary: Post Scale values
  /v1/varroa-scan:
    get:
      description: "This returns varroa scan metadata. You can search for varroa scans\
        \ for a certain, defineable date range. The request needs to send a cookie\
        \ along with the request. The cookie is stored under the key called \"token\"\
        . Note that this returns the image for a QBox Client (independent of the beeHive),\
        \ the API call for an actual beeHive is different."
      operationId: varroaScanGet
      parameters:
      - description: Either the cookie or this Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: false
        in: header
        name: Q-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Either this cookie or the Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: true
        in: cookie
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The Mac Address of the QBox client. You can get all QBox IDs
          and clients with the /config API call.
        example: 829898a53801
        explode: true
        in: query
        name: bhiveId
        required: true
        schema:
          type: string
        style: form
      - description: The Unix Time (epoch) that defines the end time of the varroa
          images. The beginning is defined by the secondsInThePast parameter.
        example: 1639170002
        explode: true
        in: query
        name: epoch
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "The UUID of the varra-scan. If not set, the request will return\
          \ scans in the given time range. If this parameter is given we ignore all\
          \ time ranges. This is currently not implemented."
        example: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          type: string
        style: form
      - description: The User ID. This is used internally and will be overwritten
          if you send it to the api server. Ignore.
        example: 123
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: How many seconds we go to the past to get the data measurements.
        example: 7200
        explode: true
        in: query
        name: secondsInThePast
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/varroa-scan-response'
          description: Successfully returns a list of varroa scans
        "400":
          description: Client error
        "500":
          description: Internal error
      security:
      - cookieAuth: []
      summary: Get Varroa Scan images and metadata
    post:
      description: This saves varroa scan metadata. This is not callable from an external
        API.
      operationId: varroaScanPost
      parameters:
      - description: The User ID. This is used internally and will be overwritten
          if you send it to the api server. Ignore.
        example: 123
        explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/varroa-scan'
      responses:
        "200":
          description: OK
        "400":
          description: Client error
        "500":
          description: Internal error
      summary: Save Varroa Scan metadata
  /v1/varroa-scan-image:
    post:
      description: Upload a varroa scan image here. The file is attached via multipart/form-data.
      operationId: varroaScanImagePost
      parameters:
      - description: Either the cookie or this Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: false
        in: header
        name: Q-Token
        required: true
        schema:
          type: string
        style: simple
      - description: Either this cookie or the Q-Token must be set to be authorized
          for the API call.
        example: 8B0FE5CF-C096-4B3E-8748-27906B4A9449
        explode: true
        in: cookie
        name: token
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/varroaScanImagePost_request'
      responses:
        "200":
          description: OK
        "400":
          description: Client error
        "500":
          description: Internal error
      summary: Save Varroa Scan image
components:
  schemas:
    errorMessage:
      description: A text message describing an error
      maxLength: 256
      type: string
    id:
      description: ID of the object. The ID is usually determined by the DBMS.
      example: 15
      minimum: 1
      type: integer
    varroa-scan-metadata:
      example:
        confidence: 0.27206607659657794
        yCenter: 0.27206607659657794
        width: 0.27206607659657794
        class: mite
        xCenter: 0.27206607659657794
        height: 0.27206607659657794
      properties:
        class:
          description: "classification of the object - we currently support: bee_leg,bee,mite,bee_wing,ant,wax_moth_droppings,wax_platelets,pollen,bee_droppings,cell_cover_grist"
          example: mite
          type: string
          x-protobuf-index: 1
        confidence:
          description: how confident the AI is regarding the result
          example: 0.27206607659657794
          format: double
          type: number
          x-protobuf-index: 2
        xCenter:
          description: center of the object on the x axis
          example: 0.27206607659657794
          format: double
          type: number
          x-protobuf-index: 3
        yCenter:
          description: center of the object on the y axis
          example: 0.27206607659657794
          format: double
          type: number
          x-protobuf-index: 4
        width:
          description: width of the object
          example: 0.27206607659657794
          format: double
          type: number
          x-protobuf-index: 5
        height:
          description: height of the object
          example: 0.27206607659657794
          format: double
          type: number
          x-protobuf-index: 6
      type: object
    varroa-scan:
      example:
        metadata:
        - confidence: 0.27206607659657794
          yCenter: 0.27206607659657794
          width: 0.27206607659657794
          class: mite
          xCenter: 0.27206607659657794
          height: 0.27206607659657794
        - confidence: 0.27206607659657794
          yCenter: 0.27206607659657794
          width: 0.27206607659657794
          class: mite
          xCenter: 0.27206607659657794
          height: 0.27206607659657794
        bhiveId: 829898a53801
        imageUrl: https://api.queensaver.com/images/1234.jpg
        mites: 3
        scan: scan
        epoch: 1639169129
      properties:
        bhiveId:
          description: bhiveId to identify the data source. Might become empty in
            a future iteration as it's redundant with the query parameter.
          example: 829898a53801
          type: string
          x-protobuf-index: 1
        imageUrl:
          description: URL to the image of the varroa scan
          example: https://api.queensaver.com/images/1234.jpg
          type: string
          x-protobuf-index: 2
        epoch:
          description: timestamp of the measurement on one second precision
          example: 1639169129
          format: int64
          type: integer
          x-protobuf-index: 3
        metadata:
          items:
            $ref: '#/components/schemas/varroa-scan-metadata'
          type: array
          x-protobuf-index: 4
        mites:
          description: the number of varroa mites in a scan
          example: 3
          format: int64
          type: integer
          x-protobuf-index: 5
        scan:
          description: the scanned image data in binary format. this is used internally
            and won't surface at the API server (any data will be ignored).
          format: byte
          type: string
          x-protobuf-index: 6
      type: object
    bbox-config-response:
      example:
        scaleMeasureInterval: 409
        httpResponseCode: 409
      properties:
        httpResponseCode:
          description: HTTP response code.
          example: 409
          type: integer
          x-protobuf-index: 1
        scaleMeasureInterval:
          description: How often the bbox needs to take and send measurements from
            the scale. The unit is in seconds.
          example: 409
          type: integer
          x-protobuf-index: 2
      type: object
    authenticate-post-response:
      example:
        httpResponseCode: 409
        userId: 1
      properties:
        httpResponseCode:
          description: HTTP response code.
          example: 409
          type: integer
          x-protobuf-index: 1
        userId:
          description: the user id.
          example: 1
          format: int64
          type: integer
          x-protobuf-index: 2
      type: object
    login-post-response:
      example:
        httpResponseCode: 409
        token: asdf
      properties:
        httpResponseCode:
          description: HTTP response code.
          example: 409
          type: integer
          x-protobuf-index: 1
        token:
          description: cookie that is returned as a cookie to the browser
          example: asdf
          type: string
          x-protobuf-index: 2
      type: object
    generic-post-response:
      example:
        httpResponseCode: 409
      properties:
        httpResponseCode:
          description: HTTP response code.
          example: 409
          type: integer
          x-protobuf-index: 1
      type: object
    varroa-scan-response:
      example:
        httpResponseCode: 409
        varroaScans:
        - metadata:
          - confidence: 0.27206607659657794
            yCenter: 0.27206607659657794
            width: 0.27206607659657794
            class: mite
            xCenter: 0.27206607659657794
            height: 0.27206607659657794
          - confidence: 0.27206607659657794
            yCenter: 0.27206607659657794
            width: 0.27206607659657794
            class: mite
            xCenter: 0.27206607659657794
            height: 0.27206607659657794
          bhiveId: 829898a53801
          imageUrl: https://api.queensaver.com/images/1234.jpg
          mites: 3
          scan: scan
          epoch: 1639169129
        - metadata:
          - confidence: 0.27206607659657794
            yCenter: 0.27206607659657794
            width: 0.27206607659657794
            class: mite
            xCenter: 0.27206607659657794
            height: 0.27206607659657794
          - confidence: 0.27206607659657794
            yCenter: 0.27206607659657794
            width: 0.27206607659657794
            class: mite
            xCenter: 0.27206607659657794
            height: 0.27206607659657794
          bhiveId: 829898a53801
          imageUrl: https://api.queensaver.com/images/1234.jpg
          mites: 3
          scan: scan
          epoch: 1639169129
      properties:
        httpResponseCode:
          description: "HTTP response code. Used for internal purposes, will be sent\
            \ out at the API."
          example: 409
          type: integer
          x-protobuf-index: 1
        varroaScans:
          items:
            $ref: '#/components/schemas/varroa-scan'
          type: array
          x-protobuf-index: 2
      type: object
    put-hive-response:
      example:
        hive:
          frames: 3
          format: Dadant
          epoch: 1639170002
          uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          capacity: 10
          standUuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          alerts:
          - alertType: VarroaHigh
          - alertType: VarroaHigh
          httpReponseCode: 409
          deleted: true
          public: true
          bhiveId: 829898a53801
          name: B25
          comment: This hive needs to be replaced next year
        httpResponseCode: 409
      properties:
        httpResponseCode:
          description: "HTTP response code. Used for internal purposes, will be sent\
            \ out at the API."
          example: 409
          type: integer
          x-protobuf-index: 1
        hive:
          $ref: '#/components/schemas/hive'
      type: object
    post-hives-response:
      example:
        hive:
          frames: 3
          format: Dadant
          epoch: 1639170002
          uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          capacity: 10
          standUuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          alerts:
          - alertType: VarroaHigh
          - alertType: VarroaHigh
          httpReponseCode: 409
          deleted: true
          public: true
          bhiveId: 829898a53801
          name: B25
          comment: This hive needs to be replaced next year
        httpResponseCode: 409
      properties:
        httpResponseCode:
          description: "HTTP response code. Used for internal purposes, will be sent\
            \ out at the API."
          example: 409
          type: integer
          x-protobuf-index: 1
        hive:
          $ref: '#/components/schemas/hive'
      type: object
    put-bbox-response:
      example:
        bbox:
          bboxId: bboxId
          schedule: "03 6,12,16,20 * * *"
          bhives:
          - bhiveId: 829898a53801
            scaleOffset: 1234
            scaleReferenceUnit: 1234
          - bhiveId: 829898a53801
            scaleOffset: 1234
            scaleReferenceUnit: 1234
          hardwareRevision: 1
          registrationId: registrationId
          hardwareType: scale
          uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          powerSave: true
        httpResponseCode: 409
      properties:
        httpResponseCode:
          description: "HTTP response code. Used for internal purposes, will be sent\
            \ out at the API."
          example: 409
          type: integer
          x-protobuf-index: 1
        bbox:
          $ref: '#/components/schemas/bbox'
      type: object
    post-bbox-response:
      example:
        bbox:
          bboxId: bboxId
          schedule: "03 6,12,16,20 * * *"
          bhives:
          - bhiveId: 829898a53801
            scaleOffset: 1234
            scaleReferenceUnit: 1234
          - bhiveId: 829898a53801
            scaleOffset: 1234
            scaleReferenceUnit: 1234
          hardwareRevision: 1
          registrationId: registrationId
          hardwareType: scale
          uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          powerSave: true
        httpResponseCode: 409
      properties:
        httpResponseCode:
          description: "HTTP response code. Used for internal purposes, will be sent\
            \ out at the API."
          example: 409
          type: integer
          x-protobuf-index: 1
        bbox:
          $ref: '#/components/schemas/bbox'
      type: object
    get-bbox-response:
      example:
        bboxes:
        - bboxId: bboxId
          schedule: "03 6,12,16,20 * * *"
          bhives:
          - bhiveId: 829898a53801
            scaleOffset: 1234
            scaleReferenceUnit: 1234
          - bhiveId: 829898a53801
            scaleOffset: 1234
            scaleReferenceUnit: 1234
          hardwareRevision: 1
          registrationId: registrationId
          hardwareType: scale
          uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          powerSave: true
        - bboxId: bboxId
          schedule: "03 6,12,16,20 * * *"
          bhives:
          - bhiveId: 829898a53801
            scaleOffset: 1234
            scaleReferenceUnit: 1234
          - bhiveId: 829898a53801
            scaleOffset: 1234
            scaleReferenceUnit: 1234
          hardwareRevision: 1
          registrationId: registrationId
          hardwareType: scale
          uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          powerSave: true
        httpResponseCode: 409
      properties:
        bboxes:
          items:
            $ref: '#/components/schemas/bbox'
          type: array
          x-protobuf-index: 1
        httpResponseCode:
          description: "HTTP response code. Used for internal purposes, will be sent\
            \ out at the API."
          example: 409
          type: integer
          x-protobuf-index: 2
      type: object
    put-stand-response:
      example:
        httpResponseCode: 409
        stand:
          httpReponseCode: 409
          deleted: true
          latitude: 0.8008281904610115
          hives:
          - frames: 3
            format: Dadant
            epoch: 1639170002
            uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
            capacity: 10
            standUuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
            alerts:
            - alertType: VarroaHigh
            - alertType: VarroaHigh
            httpReponseCode: 409
            deleted: true
            public: true
            bhiveId: 829898a53801
            name: B25
            comment: This hive needs to be replaced next year
          - frames: 3
            format: Dadant
            epoch: 1639170002
            uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
            capacity: 10
            standUuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
            alerts:
            - alertType: VarroaHigh
            - alertType: VarroaHigh
            httpReponseCode: 409
            deleted: true
            public: true
            bhiveId: 829898a53801
            name: B25
            comment: This hive needs to be replaced next year
          name: B
          epoch: 1639170002
          uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          longitude: 6.027456183070403
      properties:
        httpResponseCode:
          description: "HTTP response code. Used for internal purposes, will be sent\
            \ out at the API."
          example: 409
          type: integer
          x-protobuf-index: 1
        stand:
          $ref: '#/components/schemas/stand'
      type: object
    post-stands-response:
      example:
        httpResponseCode: 409
        stand:
          httpReponseCode: 409
          deleted: true
          latitude: 0.8008281904610115
          hives:
          - frames: 3
            format: Dadant
            epoch: 1639170002
            uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
            capacity: 10
            standUuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
            alerts:
            - alertType: VarroaHigh
            - alertType: VarroaHigh
            httpReponseCode: 409
            deleted: true
            public: true
            bhiveId: 829898a53801
            name: B25
            comment: This hive needs to be replaced next year
          - frames: 3
            format: Dadant
            epoch: 1639170002
            uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
            capacity: 10
            standUuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
            alerts:
            - alertType: VarroaHigh
            - alertType: VarroaHigh
            httpReponseCode: 409
            deleted: true
            public: true
            bhiveId: 829898a53801
            name: B25
            comment: This hive needs to be replaced next year
          name: B
          epoch: 1639170002
          uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          longitude: 6.027456183070403
      properties:
        httpResponseCode:
          description: "HTTP response code. Used for internal purposes, will be sent\
            \ out at the API."
          example: 409
          type: integer
          x-protobuf-index: 1
        stand:
          $ref: '#/components/schemas/stand'
      type: object
    get-stands-response:
      example:
        stands:
        - httpReponseCode: 409
          deleted: true
          latitude: 0.8008281904610115
          hives:
          - frames: 3
            format: Dadant
            epoch: 1639170002
            uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
            capacity: 10
            standUuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
            alerts:
            - alertType: VarroaHigh
            - alertType: VarroaHigh
            httpReponseCode: 409
            deleted: true
            public: true
            bhiveId: 829898a53801
            name: B25
            comment: This hive needs to be replaced next year
          - frames: 3
            format: Dadant
            epoch: 1639170002
            uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
            capacity: 10
            standUuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
            alerts:
            - alertType: VarroaHigh
            - alertType: VarroaHigh
            httpReponseCode: 409
            deleted: true
            public: true
            bhiveId: 829898a53801
            name: B25
            comment: This hive needs to be replaced next year
          name: B
          epoch: 1639170002
          uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          longitude: 6.027456183070403
        - httpReponseCode: 409
          deleted: true
          latitude: 0.8008281904610115
          hives:
          - frames: 3
            format: Dadant
            epoch: 1639170002
            uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
            capacity: 10
            standUuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
            alerts:
            - alertType: VarroaHigh
            - alertType: VarroaHigh
            httpReponseCode: 409
            deleted: true
            public: true
            bhiveId: 829898a53801
            name: B25
            comment: This hive needs to be replaced next year
          - frames: 3
            format: Dadant
            epoch: 1639170002
            uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
            capacity: 10
            standUuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
            alerts:
            - alertType: VarroaHigh
            - alertType: VarroaHigh
            httpReponseCode: 409
            deleted: true
            public: true
            bhiveId: 829898a53801
            name: B25
            comment: This hive needs to be replaced next year
          name: B
          epoch: 1639170002
          uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          longitude: 6.027456183070403
        httpResponseCode: 409
      properties:
        stands:
          items:
            $ref: '#/components/schemas/stand'
          type: array
          x-protobuf-index: 1
        httpResponseCode:
          description: "HTTP response code. Used for internal purposes, will be sent\
            \ out at the API."
          example: 409
          type: integer
          x-protobuf-index: 2
      type: object
    get-hives-response:
      example:
        hives:
        - frames: 3
          format: Dadant
          epoch: 1639170002
          uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          capacity: 10
          standUuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          alerts:
          - alertType: VarroaHigh
          - alertType: VarroaHigh
          httpReponseCode: 409
          deleted: true
          public: true
          bhiveId: 829898a53801
          name: B25
          comment: This hive needs to be replaced next year
        - frames: 3
          format: Dadant
          epoch: 1639170002
          uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          capacity: 10
          standUuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          alerts:
          - alertType: VarroaHigh
          - alertType: VarroaHigh
          httpReponseCode: 409
          deleted: true
          public: true
          bhiveId: 829898a53801
          name: B25
          comment: This hive needs to be replaced next year
        httpResponseCode: 409
      properties:
        hives:
          items:
            $ref: '#/components/schemas/hive'
          type: array
          x-protobuf-index: 1
        httpResponseCode:
          description: "HTTP response code. Used for internal purposes, will be sent\
            \ out at the API."
          example: 409
          type: integer
          x-protobuf-index: 2
      type: object
    get-temperature-response:
      example:
        temperatures:
        - bhiveId: 829898a53801
          temperature: 13.2345
          epoch: 1639169129
        - bhiveId: 829898a53801
          temperature: 13.2345
          epoch: 1639169129
        httpResponseCode: 409
      properties:
        temperatures:
          items:
            $ref: '#/components/schemas/temperature'
          type: array
          x-protobuf-index: 1
        httpResponseCode:
          description: "HTTP response code. Used for internal purposes, will be sent\
            \ out at the API."
          example: 409
          type: integer
          x-protobuf-index: 2
      type: object
    temperature:
      example:
        bhiveId: 829898a53801
        temperature: 13.2345
        epoch: 1639169129
      properties:
        bhiveId:
          description: bhiveId to identify the data source. Might become empty in
            a future iteration as it's redundant with the query parameter.
          example: 829898a53801
          type: string
          x-protobuf-index: 1
        temperature:
          description: actual measurement of the temperature
          example: 13.2345
          format: float
          type: number
          x-protobuf-index: 2
        epoch:
          description: timestamp of the measurement on one second precision
          example: 1639169129
          format: int64
          type: integer
          x-protobuf-index: 3
      required:
      - bhiveId
      - epoch
      - temperature
      type: object
    scaleV2Response:
      example:
        values:
        - macAddress: 829898a53801
          weight: 53.2345
          epoch: 1639169129
        - macAddress: 829898a53801
          weight: 53.2345
          epoch: 1639169129
        httpResponseCode: 409
      properties:
        httpResponseCode:
          description: "HTTP response code. Used for internal purposes, will be let\
            \ out at the API level."
          example: 409
          type: integer
          x-protobuf-index: 1
        values:
          description: The measurement responses
          items:
            $ref: '#/components/schemas/scaleV2'
          type: array
          x-protobuf-index: 2
      type: object
    scaleV2:
      example:
        macAddress: 829898a53801
        weight: 53.2345
        epoch: 1639169129
      properties:
        macAddress:
          description: The mac address of the scale
          example: 829898a53801
          type: string
          x-protobuf-index: 1
        weight:
          description: actual measurement of weight
          example: 53.2345
          format: float
          type: number
          x-protobuf-index: 2
        epoch:
          description: timestamp of the measurement on one second precision
          example: 1639169129
          format: int64
          type: integer
          x-protobuf-index: 3
      type: object
    weight:
      example:
        bhiveId: 829898a53801
        weight: 53.2345
        epoch: 1639169129
      properties:
        bhiveId:
          description: bhiveId to identify the data source.
          example: 829898a53801
          type: string
        weight:
          description: actual measurement of weight
          example: 53.2345
          format: float
          type: number
        epoch:
          description: timestamp of the measurement on one second precision
          example: 1639169129
          format: int64
          type: integer
      type: object
    registrationId:
      properties:
        registrationId:
          description: "Registration ID, in the form of the unique identifier"
          example: 422DBCF1873243F4BF537E76C4CF28E9
          maxLength: 256
          type: string
      required:
      - registrationId
      type: object
    login:
      properties:
        username:
          description: "Username, must be unique to the queensaver system. We encourage\
            \ using email-addresses here."
          example: jon@doe.com
          maxLength: 256
          type: string
        password:
          description: Password
          example: trustno1
          format: password
          type: string
      required:
      - password
      - username
      type: object
    bhive:
      example:
        bhiveId: 829898a53801
        scaleOffset: 1234
        scaleReferenceUnit: 1234
      properties:
        bhiveId:
          description: The ID of a beehive. Is unique for that user.
          example: 829898a53801
          maxLength: 256
          type: string
          x-protobuf-index: 1
        scaleOffset:
          description: Scale offset number (calibration data)
          example: 1234
          format: float
          type: number
          x-protobuf-index: 2
        scaleReferenceUnit:
          description: Scale Reference Unit (calibration data)
          example: 1234
          format: float
          type: number
          x-protobuf-index: 3
      type: object
    stand:
      example:
        httpReponseCode: 409
        deleted: true
        latitude: 0.8008281904610115
        hives:
        - frames: 3
          format: Dadant
          epoch: 1639170002
          uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          capacity: 10
          standUuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          alerts:
          - alertType: VarroaHigh
          - alertType: VarroaHigh
          httpReponseCode: 409
          deleted: true
          public: true
          bhiveId: 829898a53801
          name: B25
          comment: This hive needs to be replaced next year
        - frames: 3
          format: Dadant
          epoch: 1639170002
          uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          capacity: 10
          standUuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          alerts:
          - alertType: VarroaHigh
          - alertType: VarroaHigh
          httpReponseCode: 409
          deleted: true
          public: true
          bhiveId: 829898a53801
          name: B25
          comment: This hive needs to be replaced next year
        name: B
        epoch: 1639170002
        uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
        longitude: 6.027456183070403
      properties:
        hives:
          description: "A stand can have many hives. However, when sending POST or\
            \ PUT requests you can only update the stand metadata, any hives attached\
            \ to this array will be ignored. You will have to do the /hives API call\
            \ instead to create / update hives with the correct stand UUID. This array\
            \ will only be populated with GET requests."
          items:
            $ref: '#/components/schemas/hive'
          type: array
          x-protobuf-index: 1
        name:
          description: Name of the stand. Can be chosen by the user. A stand is a
            collection of bee hives.
          example: B
          type: string
          x-protobuf-index: 2
        latitude:
          description: latitude of the stand
          format: double
          type: number
          x-protobuf-index: 3
        longitude:
          description: longitude of the stand
          format: double
          type: number
          x-protobuf-index: 4
        httpReponseCode:
          description: "HTTP response code. Used for internal purposes, will be let\
            \ out at the API level."
          example: 409
          type: integer
          x-protobuf-index: 6
        epoch:
          description: "Epoch when the data was last updated. This will be set internally,\
            \ no need to add this with PUT or POST calls."
          example: 1639170002
          format: int64
          type: integer
          x-protobuf-index: 7
        uuid:
          description: Unique Identifier for this stand
          example: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          type: string
          x-protobuf-index: 8
        deleted:
          description: "if set to true, the hive has been deleted at this epoch."
          example: true
          type: boolean
          x-protobuf-index: 9
      required:
      - name
      type: object
    alerts:
      example:
        alertType: VarroaHigh
      properties:
        alertType:
          description: Various alerts a bee hive can have.
          enum:
          - VarroaHigh
          - WeightLow
          - QueenLess
          example: VarroaHigh
          type: string
          x-protobuf-index: 1
      required:
      - alertType
      type: object
    hive:
      example:
        frames: 3
        format: Dadant
        epoch: 1639170002
        uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
        capacity: 10
        standUuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
        alerts:
        - alertType: VarroaHigh
        - alertType: VarroaHigh
        httpReponseCode: 409
        deleted: true
        public: true
        bhiveId: 829898a53801
        name: B25
        comment: This hive needs to be replaced next year
      properties:
        name:
          description: Name of the hive. Can be chosen by the user.
          example: B25
          type: string
          x-protobuf-index: 1
        public:
          description: If the hive can be viewed by other users in the queensaver
            system
          example: true
          type: boolean
          x-protobuf-index: 2
        standUuid:
          description: Unique Identifier of the stand that this hive is part of. Must
            be defined.
          example: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          type: string
          x-protobuf-index: 3
        uuid:
          description: Unique Identifier for this hive
          example: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          type: string
          x-protobuf-index: 4
        comment:
          description: Random note or user comment
          example: This hive needs to be replaced next year
          type: string
          x-protobuf-index: 5
        capacity:
          description: How many honeycombs a frame can load
          example: 10
          maximum: 50
          minimum: 1
          type: integer
          x-protobuf-index: 6
        format:
          description: The format of the frame
          enum:
          - Zander
          - Dadant
          example: Dadant
          type: string
          x-protobuf-index: 7
        frames:
          description: The number of frames the bee hive has
          example: 3
          type: integer
          x-protobuf-index: 8
        alerts:
          items:
            $ref: '#/components/schemas/alerts'
          type: array
          x-protobuf-index: 9
        bhiveId:
          description: The ID of beehive electronics (QBox client).
          example: 829898a53801
          maxLength: 256
          type: string
          x-protobuf-index: 10
        httpReponseCode:
          description: "HTTP response code. Used for internal purposes, will be let\
            \ out at the API level."
          example: 409
          type: integer
          x-protobuf-index: 11
        epoch:
          description: "Epoch when the data was last updated. This will be set internally,\
            \ no need to add this with PUT or POST calls."
          example: 1639170002
          format: int64
          type: integer
          x-protobuf-index: 12
        deleted:
          description: "if set to true, the hive has been deleted at this epoch."
          example: true
          type: boolean
          x-protobuf-index: 13
      required:
      - name
      - standUuid
      type: object
    bbox:
      example:
        bboxId: bboxId
        schedule: "03 6,12,16,20 * * *"
        bhives:
        - bhiveId: 829898a53801
          scaleOffset: 1234
          scaleReferenceUnit: 1234
        - bhiveId: 829898a53801
          scaleOffset: 1234
          scaleReferenceUnit: 1234
        hardwareRevision: 1
        registrationId: registrationId
        hardwareType: scale
        uuid: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
        powerSave: true
      properties:
        bboxId:
          description: The ID of the bbox electronix (QBox). Is usually a mac address
            of a network interface.
          maxLength: 256
          type: string
          x-protobuf-index: 1
        schedule:
          description: A cron type of description of when the sensore measurements
            are supposed to be done.
          example: "03 6,12,16,20 * * *"
          maxLength: 256
          type: string
          x-protobuf-index: 2
        uuid:
          description: Unique Identifier for this bbox
          example: 41C0FE2F-EB0C-45B4-8842-C117E47C35E3
          type: string
          x-protobuf-index: 3
        bhives:
          items:
            $ref: '#/components/schemas/bhive'
          type: array
          x-protobuf-index: 4
        powerSave:
          description: If the bbox turns the power off after a successful run and
            wakes up later according to the schedule.
          example: true
          type: boolean
          x-protobuf-index: 5
        registrationId:
          description: The registration ID of the bbox. The user needs to put this
            into the interface so that the bbox can then register via the /configs/bbox/register
            API call to retrieve the token.
          maxLength: 256
          type: string
          x-protobuf-index: 6
        hardwareType:
          description: "Hardware type of the bbox - could be a varroa-scanner or a\
            \ scale, etc."
          example: scale
          maxLength: 256
          type: string
          x-protobuf-index: 7
        hardwareRevision:
          description: Hardware revision - newer revisions might have different features
            which are important to know.
          example: 1
          format: int64
          type: integer
          x-protobuf-index: 8
      type: object
    user:
      properties:
        username:
          description: "Username, must be unique to the queensaver system. We encourage\
            \ using email-addresses here."
          example: jon@doe.com
          maxLength: 256
          type: string
        password:
          description: Password
          format: password
          type: string
        firstName:
          description: First name of the user
          example: Hans
          maxLength: 256
          type: string
        lastName:
          description: Last name of the user
          example: Ecker
          maxLength: 256
          type: string
      required:
      - firstName
      - lastName
      - password
      - username
      type: object
    varroaScanImagePost_request:
      properties:
        userId:
          description: the internal user id of the authenticated user. Will be set
            internally in the cloud system and does not have an effect if set via
            the API call as it will be overridden. Don't set this value.
          example: 4
          format: int64
          type: integer
        bhiveId:
          description: The Mac Address of the QBox client. You can get all QBox IDs
            and clients with the /config API call.
          example: 829898a53801
          type: string
        epoch:
          description: The Unix Time (epoch) that defines the end time of the varroa
            images. The beginning is defined by the secondsInThePast parameter.
          example: 1639170002
          format: int64
          type: integer
        scan:
          format: byte
          type: string
      type: object
  securitySchemes:
    cookieAuth:
      in: cookie
      name: token
      type: apiKey
