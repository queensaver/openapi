/*
 * Queensaver API
 *
 * Queensaver API to send in sensor data and retrieve it. It's also used for user management.
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type PutBboxResponse struct {

	// HTTP response code. Used for internal purposes, will be sent out at the API.
	HttpResponseCode int32 `json:"httpResponseCode,omitempty"`

	Bbox Bbox `json:"bbox,omitempty"`
}

// AssertPutBboxResponseRequired checks if the required fields are not zero-ed
func AssertPutBboxResponseRequired(obj PutBboxResponse) error {
	if err := AssertBboxRequired(obj.Bbox); err != nil {
		return err
	}
	return nil
}

// AssertRecursePutBboxResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PutBboxResponse (e.g. [][]PutBboxResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePutBboxResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPutBboxResponse, ok := obj.(PutBboxResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPutBboxResponseRequired(aPutBboxResponse)
	})
}
