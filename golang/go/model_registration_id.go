/*
 * Queensaver API
 *
 * Queensaver API to send in sensor data and retrieve it. It's also used for user management.
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type RegistrationId struct {

	// Registration ID, in the form of the unique identifier
	RegistrationId string `json:"registrationId"`
}

// AssertRegistrationIdRequired checks if the required fields are not zero-ed
func AssertRegistrationIdRequired(obj RegistrationId) error {
	elements := map[string]interface{}{
		"registrationId": obj.RegistrationId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseRegistrationIdRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of RegistrationId (e.g. [][]RegistrationId), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseRegistrationIdRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aRegistrationId, ok := obj.(RegistrationId)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertRegistrationIdRequired(aRegistrationId)
	})
}
