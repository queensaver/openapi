/*
 * Queensaver API
 *
 * Queensaver API to send in sensor data and retrieve it. It's also used for user management.
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Telemetry struct {

	// The mac address of the scale
	M string `json:"m,omitempty"`

	// actual measurement of weight
	W float32 `json:"w,omitempty"`

	// timestamp of the measurement on one second precision (unix timestamp)
	E int64 `json:"e,omitempty"`

	// temperature
	T float32 `json:"t,omitempty"`

	// air pressure according to sensor
	A float32 `json:"a,omitempty"`

	// Battery voltage
	B float32 `json:"b,omitempty"`

	// signal Strength in %
	S int32 `json:"s,omitempty"`

	// longitude of the system
	Lo float32 `json:"lo,omitempty"`

	// latitude of the system
	La float32 `json:"la,omitempty"`
}

// AssertTelemetryRequired checks if the required fields are not zero-ed
func AssertTelemetryRequired(obj Telemetry) error {
	return nil
}

// AssertRecurseTelemetryRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Telemetry (e.g. [][]Telemetry), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseTelemetryRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aTelemetry, ok := obj.(Telemetry)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertTelemetryRequired(aTelemetry)
	})
}
