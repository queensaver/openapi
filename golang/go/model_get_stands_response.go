/*
 * Queensaver API
 *
 * Queensaver API to send in sensor data and retrieve it. It's also used for user management.
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type GetStandsResponse struct {

	Stands []Stand `json:"stands,omitempty"`

	// HTTP response code. Used for internal purposes, will be sent out at the API.
	HttpResponseCode int32 `json:"httpResponseCode,omitempty"`
}

// AssertGetStandsResponseRequired checks if the required fields are not zero-ed
func AssertGetStandsResponseRequired(obj GetStandsResponse) error {
	for _, el := range obj.Stands {
		if err := AssertStandRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseGetStandsResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of GetStandsResponse (e.g. [][]GetStandsResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGetStandsResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGetStandsResponse, ok := obj.(GetStandsResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGetStandsResponseRequired(aGetStandsResponse)
	})
}
