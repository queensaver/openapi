/*
 * Queensaver API
 *
 * Queensaver API to send in sensor data and retrieve it. It's also used for user management.
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type GetTemperatureResponse struct {

	Temperatures []Temperature `json:"temperatures,omitempty"`

	// HTTP response code. Used for internal purposes, will be sent out at the API.
	HttpResponseCode int32 `json:"httpResponseCode,omitempty"`
}

// AssertGetTemperatureResponseRequired checks if the required fields are not zero-ed
func AssertGetTemperatureResponseRequired(obj GetTemperatureResponse) error {
	for _, el := range obj.Temperatures {
		if err := AssertTemperatureRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseGetTemperatureResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of GetTemperatureResponse (e.g. [][]GetTemperatureResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGetTemperatureResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGetTemperatureResponse, ok := obj.(GetTemperatureResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGetTemperatureResponseRequired(aGetTemperatureResponse)
	})
}
