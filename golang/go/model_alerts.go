/*
 * Queensaver API
 *
 * Queensaver API to send in sensor data and retrieve it. It's also used for user management.
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"encoding/json"
)



type Alerts struct {

	// Various alerts a bee hive can have.
	AlertType string `json:"alertType"`
}

// UnmarshalJSON sets *m to a copy of data while respecting defaults if specified.
func (m *Alerts) UnmarshalJSON(data []byte) error {

	type Alias Alerts // To avoid infinite recursion
    return json.Unmarshal(data, (*Alias)(m))
}

// AssertAlertsRequired checks if the required fields are not zero-ed
func AssertAlertsRequired(obj Alerts) error {
	elements := map[string]interface{}{
		"alertType": obj.AlertType,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertAlertsConstraints checks if the values respects the defined constraints
func AssertAlertsConstraints(obj Alerts) error {
	return nil
}
