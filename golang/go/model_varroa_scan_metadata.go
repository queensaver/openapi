/*
 * Queensaver API
 *
 * Queensaver API to send in sensor data and retrieve it. It's also used for user management.
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type VarroaScanMetadata struct {

	// classification of the object - that could be a bee_wing, mite, wax_platelets, wax_moth_droppings, etc...
	Class string `json:"class,omitempty"`

	// how confident the AI is regarding the result
	Confidence float32 `json:"confidence,omitempty"`

	// center of the object on the x axis
	XCenter float32 `json:"xCenter,omitempty"`

	// center of the object on the y axis
	YCenter float32 `json:"yCenter,omitempty"`

	// width of the object
	Width float32 `json:"width,omitempty"`

	// height of the object
	Height float32 `json:"height,omitempty"`
}

// AssertVarroaScanMetadataRequired checks if the required fields are not zero-ed
func AssertVarroaScanMetadataRequired(obj VarroaScanMetadata) error {
	return nil
}

// AssertRecurseVarroaScanMetadataRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of VarroaScanMetadata (e.g. [][]VarroaScanMetadata), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseVarroaScanMetadataRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aVarroaScanMetadata, ok := obj.(VarroaScanMetadata)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertVarroaScanMetadataRequired(aVarroaScanMetadata)
	})
}
