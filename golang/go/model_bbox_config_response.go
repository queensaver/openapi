/*
 * Queensaver API
 *
 * Queensaver API to send in sensor data and retrieve it. It's also used for user management.
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type BboxConfigResponse struct {

	// HTTP response code.
	HttpResponseCode int32 `json:"httpResponseCode,omitempty"`

	// How often the bbox needs to take and send measurements from the scale. The unit is in seconds.
	ScaleMeasureInterval int32 `json:"scaleMeasureInterval,omitempty"`

	// How often the bbox needs to send the measurements (in batches)
	BatchInterval int32 `json:"batchInterval,omitempty"`
}

// AssertBboxConfigResponseRequired checks if the required fields are not zero-ed
func AssertBboxConfigResponseRequired(obj BboxConfigResponse) error {
	return nil
}

// AssertRecurseBboxConfigResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of BboxConfigResponse (e.g. [][]BboxConfigResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseBboxConfigResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aBboxConfigResponse, ok := obj.(BboxConfigResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertBboxConfigResponseRequired(aBboxConfigResponse)
	})
}
