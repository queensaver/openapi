/*
 * Queensaver API
 *
 * Queensaver API to send in sensor data and retrieve it. It's also used for user management.
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi


import (
	"encoding/json"
)



type BboxConfigResponse struct {

	// HTTP response code.
	HttpResponseCode int32 `json:"httpResponseCode,omitempty"`

	// How often the bbox needs to take and send measurements from the scale. The unit is in seconds.
	ScaleMeasureInterval int32 `json:"scaleMeasureInterval,omitempty"`

	// How often the bbox needs to send the measurements (in batches)
	BatchInterval int32 `json:"batchInterval,omitempty"`

	// time in ms to wait for GPS, 0 deactivates GPS
	Gps int32 `json:"gps,omitempty"`
}

// UnmarshalJSON sets *m to a copy of data while respecting defaults if specified.
func (m *BboxConfigResponse) UnmarshalJSON(data []byte) error {

	type Alias BboxConfigResponse // To avoid infinite recursion
    return json.Unmarshal(data, (*Alias)(m))
}

// AssertBboxConfigResponseRequired checks if the required fields are not zero-ed
func AssertBboxConfigResponseRequired(obj BboxConfigResponse) error {
	return nil
}

// AssertBboxConfigResponseConstraints checks if the values respects the defined constraints
func AssertBboxConfigResponseConstraints(obj BboxConfigResponse) error {
	return nil
}
