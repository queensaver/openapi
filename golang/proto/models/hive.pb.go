//
//Queensaver API
//
//Queensaver API to send in sensor data and retrieve it. It's also used for user management.
//
//The version of the OpenAPI document: 0.0.1
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: models/hive.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The format of the frame
type Hive_FormatEnum int32

const (
	Hive_FormatEnum_ZANDER Hive_FormatEnum = 0
	Hive_FormatEnum_DADANT Hive_FormatEnum = 1
)

// Enum value maps for Hive_FormatEnum.
var (
	Hive_FormatEnum_name = map[int32]string{
		0: "FormatEnum_ZANDER",
		1: "FormatEnum_DADANT",
	}
	Hive_FormatEnum_value = map[string]int32{
		"FormatEnum_ZANDER": 0,
		"FormatEnum_DADANT": 1,
	}
)

func (x Hive_FormatEnum) Enum() *Hive_FormatEnum {
	p := new(Hive_FormatEnum)
	*p = x
	return p
}

func (x Hive_FormatEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Hive_FormatEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_models_hive_proto_enumTypes[0].Descriptor()
}

func (Hive_FormatEnum) Type() protoreflect.EnumType {
	return &file_models_hive_proto_enumTypes[0]
}

func (x Hive_FormatEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Hive_FormatEnum.Descriptor instead.
func (Hive_FormatEnum) EnumDescriptor() ([]byte, []int) {
	return file_models_hive_proto_rawDescGZIP(), []int{0, 0}
}

type Hive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the hive. Can be chosen by the user.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// If the hive can be viewed by other users in the queensaver system
	Public bool `protobuf:"varint,2,opt,name=public,proto3" json:"public,omitempty"`
	// Unique Identifier of the stand that this hive is part of. Must be defined.
	StandUuid string `protobuf:"bytes,3,opt,name=standUuid,proto3" json:"standUuid,omitempty"`
	// Unique Identifier for this hive
	Uuid string `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Random note or user comment
	Comment string `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	// How many honeycombs a frame can load
	Capacity int32           `protobuf:"varint,6,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Format   Hive_FormatEnum `protobuf:"varint,7,opt,name=format,proto3,enum=openapi.Hive_FormatEnum" json:"format,omitempty"`
	// The number of frames the bee hive has
	Frames int32     `protobuf:"varint,8,opt,name=frames,proto3" json:"frames,omitempty"`
	Alerts []*Alerts `protobuf:"bytes,9,rep,name=alerts,proto3" json:"alerts,omitempty"`
	// The ID of beehive electronics (bbox) - deprecated. Use the configUuid instead.
	BboxId string `protobuf:"bytes,10,opt,name=bboxId,proto3" json:"bboxId,omitempty"`
	// HTTP response code. Used for internal purposes, will be let out at the API level.
	HttpReponseCode int32 `protobuf:"varint,11,opt,name=httpReponseCode,proto3" json:"httpReponseCode,omitempty"`
	// Epoch when the data was last updated. This will be set internally, no need to add this with PUT or POST calls.
	Epoch int64 `protobuf:"varint,12,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// if set to true, the hive has been deleted at this epoch.
	Deleted bool `protobuf:"varint,13,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// The uuid of beehive electronics (bbox).
	ConfigUuid string `protobuf:"bytes,14,opt,name=configUuid,proto3" json:"configUuid,omitempty"`
}

func (x *Hive) Reset() {
	*x = Hive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_models_hive_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hive) ProtoMessage() {}

func (x *Hive) ProtoReflect() protoreflect.Message {
	mi := &file_models_hive_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hive.ProtoReflect.Descriptor instead.
func (*Hive) Descriptor() ([]byte, []int) {
	return file_models_hive_proto_rawDescGZIP(), []int{0}
}

func (x *Hive) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Hive) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *Hive) GetStandUuid() string {
	if x != nil {
		return x.StandUuid
	}
	return ""
}

func (x *Hive) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Hive) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Hive) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *Hive) GetFormat() Hive_FormatEnum {
	if x != nil {
		return x.Format
	}
	return Hive_FormatEnum_ZANDER
}

func (x *Hive) GetFrames() int32 {
	if x != nil {
		return x.Frames
	}
	return 0
}

func (x *Hive) GetAlerts() []*Alerts {
	if x != nil {
		return x.Alerts
	}
	return nil
}

func (x *Hive) GetBboxId() string {
	if x != nil {
		return x.BboxId
	}
	return ""
}

func (x *Hive) GetHttpReponseCode() int32 {
	if x != nil {
		return x.HttpReponseCode
	}
	return 0
}

func (x *Hive) GetEpoch() int64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *Hive) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *Hive) GetConfigUuid() string {
	if x != nil {
		return x.ConfigUuid
	}
	return ""
}

var File_models_hive_proto protoreflect.FileDescriptor

var file_models_hive_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x1a, 0x13, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xdb, 0x03, 0x0a, 0x04, 0x48, 0x69, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x30,
	0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x69, 0x76, 0x65, 0x2e, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x62, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x68, 0x74, 0x74,
	0x70, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x68, 0x74, 0x74, 0x70, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55,
	0x75, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x45, 0x6e, 0x75,
	0x6d, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x5f,
	0x5a, 0x41, 0x4e, 0x44, 0x45, 0x52, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x5f, 0x44, 0x41, 0x44, 0x41, 0x4e, 0x54, 0x10, 0x01, 0x50,
	0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_models_hive_proto_rawDescOnce sync.Once
	file_models_hive_proto_rawDescData = file_models_hive_proto_rawDesc
)

func file_models_hive_proto_rawDescGZIP() []byte {
	file_models_hive_proto_rawDescOnce.Do(func() {
		file_models_hive_proto_rawDescData = protoimpl.X.CompressGZIP(file_models_hive_proto_rawDescData)
	})
	return file_models_hive_proto_rawDescData
}

var file_models_hive_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_models_hive_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_models_hive_proto_goTypes = []interface{}{
	(Hive_FormatEnum)(0), // 0: openapi.Hive.FormatEnum
	(*Hive)(nil),         // 1: openapi.Hive
	(*Alerts)(nil),       // 2: openapi.Alerts
}
var file_models_hive_proto_depIdxs = []int32{
	0, // 0: openapi.Hive.format:type_name -> openapi.Hive.FormatEnum
	2, // 1: openapi.Hive.alerts:type_name -> openapi.Alerts
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_models_hive_proto_init() }
func file_models_hive_proto_init() {
	if File_models_hive_proto != nil {
		return
	}
	file_models_alerts_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_models_hive_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_models_hive_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_models_hive_proto_goTypes,
		DependencyIndexes: file_models_hive_proto_depIdxs,
		EnumInfos:         file_models_hive_proto_enumTypes,
		MessageInfos:      file_models_hive_proto_msgTypes,
	}.Build()
	File_models_hive_proto = out.File
	file_models_hive_proto_rawDesc = nil
	file_models_hive_proto_goTypes = nil
	file_models_hive_proto_depIdxs = nil
}
