/**
 * Queensaver API
 * Queensaver API to send in sensor data and retrieve it. It\'s also used for user management.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Alerts } from './alerts';


export interface Hive { 
    /**
     * Name of the hive. Can be chosen by the user.
     */
    name: string;
    /**
     * If the hive can be viewed by other users in the queensaver system
     */
    _public?: boolean;
    /**
     * Unique Identifier of the stand that this hive is part of. Must be defined.
     */
    standUuid: string;
    /**
     * Unique Identifier for this hive
     */
    uuid?: string;
    /**
     * Random note or user comment
     */
    comment?: string;
    /**
     * How many honeycombs a frame can load
     */
    capacity?: number;
    /**
     * The format of the frame
     */
    format?: Hive.FormatEnum;
    /**
     * The number of frames the bee hive has
     */
    frames?: number;
    alerts?: Array<Alerts>;
    /**
     * The ID of beehive electronics (QBox client).
     */
    bhiveId?: string;
    /**
     * HTTP response code. Used for internal purposes, will be let out at the API level.
     */
    httpReponseCode?: number;
    /**
     * Epoch when the data was last updated. This will be set internally, no need to add this with PUT or POST calls.
     */
    epoch?: number;
}
export namespace Hive {
    export type FormatEnum = 'Zander' | 'Dadant';
    export const FormatEnum = {
        Zander: 'Zander' as FormatEnum,
        Dadant: 'Dadant' as FormatEnum
    };
}


